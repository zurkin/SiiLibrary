<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>pl.sii</groupId>
        <artifactId>sii-library</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>sii-library-web</artifactId>
    <packaging>war</packaging>
    <name>sii library web</name>
    <description>Web component</description>

    <dependencies>
        <!-- Import the ejb project so that the JSF managed bean can use the EJB -->
        <dependency>
            <groupId>pl.sii</groupId>
            <artifactId>sii-library-core</artifactId>
            <type>ejb</type>
	    <scope>provided</scope>
        </dependency>

        <!-- First declare the APIs we depend on and need for compilation.
            All of them are provided by JBoss EAP 6 -->

		 <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss EAP 6 -->
		  <dependency>
			 <groupId>org.jboss.spec.javax.ws.rs</groupId>
			 <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			 <scope>provided</scope>
		  </dependency>	
			
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss EAP 6 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
		<plugins>
<!-- 			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp</directory>
							<excludes>
								<exclude>**/WEB-INF/</exclude>
								<exclude>**/siibrary/</exclude>
								<exclude>**/static/</exclude>
							</excludes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<warSourceExcludes>siibrary/**</warSourceExcludes>
					<webResources>
						<resource>
							<directory>src/main/webapp/siibrary/dist</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
			    <groupId>pl.allegro</groupId>
			    <artifactId>grunt-maven-plugin</artifactId>
			    <version>1.5.0</version>
			    <configuration>
			        <!-- relative to src/main/webapp/, default: static -->
			        <!-- <jsSourceDirectory>../../../../siibrary</jsSourceDirectory> -->
			        <jsSourceDirectory>siibrary</jsSourceDirectory>
			        <gruntBuildDirectory>src/main/webapp/siibrary</gruntBuildDirectory>
			        <!-- <gruntBuildDirectory>src/main/webapp/static</gruntBuildDirectory> -->
			
			        <!-- example options usage to get verbose output in logs -->
			        <gruntOptions>
			            <gruntOption>--verbose</gruntOption>
			        </gruntOptions>
			
			        <!-- example npm install env variable -->
			        <npmEnvironmentVar>
			            <PHANTOMJS_CDNURL>http://cnpmjs.org/downloads</PHANTOMJS_CDNURL>
			        </npmEnvironmentVar>
			
			        <!-- example options usage to filter variables in given resource -->
<!-- 				        <filteredResources>
			            <filteredResource>maven-properties.json</filteredResource>
			        </filteredResources> -->
				
			    </configuration>
			    <executions>
			        <execution>
			            <goals>
			                <!-- <goal>create-resources</goal> -->
			                <goal>npm</goal>
			                <goal>grunt</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
    </build>

</project>
